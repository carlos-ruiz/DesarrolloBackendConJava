1. Bienvenida e Introducción
	-> 1. ¿Por qué aprender Programación Orientada a Objetos?
			
			Vas a programar más rápido. Tener un análisis previo de lo que estás realizando te ayudará a generar código mucho más veloz

			Dejas de ser Programador Jr. Podrás responder preguntas como ¿Qué es encapsulamiento?, ¿Qué es Abstracción?, ¿Qué es Herencia?, ¿Qué es Polimorfismo? en futuras entrevistas de trabajo

			Dejar de Copiar y Pegar Código.
	-> 2. ¿Qué resuelve la Programación Orientación a Objetos?

			La programación Orientada a Objetos nace de los problemas creados por la programación estructurada y nos ayuda a resolver cierto problemas como:

				Código muy largo: A medida que un sistema va creciendo y se hace más robusta el código generado se vuelve muy extenso haciéndose difícil de leer, depurar, mantener.

				Si algo falla, todo se rompe: Ya que con la programación estructurada el código se ejecuta secuencialmente al momento de que una de esas líneas fallara todo lo demás deja de funcionar.

				Difícil de mantener.

	-> 3. Paradigma Orientado a Objetos

			La Programación Orientada a Objetos viene de una filosofía o forma de pensar que es la Orientación a Objetos y esto surge a partir de los problemas que necesitamos plasmar en código.

			Es analizar un problema en forma de objetos para después llevarlo a código, eso es la Orientación a Objetos.

			Un paradigma es una teoría que suministra la base y modelo para resolver problemas. La paradigma de Programación Orientada a Objetos se compone de 4 elementos:

			Clases      = Molde
			Propiedades = Atributos
			Métodos     = Acciones
			Objetos     = Instancia del Molde
			Y 4 Pilares:

			Encapsulamiento = scope de la variables
			Abstracción     = MOdelamiento del problema
			Herencia        = Pasar propiedades entre clases
			Polimorfismo    = Las diferentes formas que pude tner un objeto.
	
	-> 4. Lenguajes Orientados a Objetos

		Algunos de los lenguajes de programación Orientados a Objetos son:

			Java:
			– Orientado a Objetos naturalmente
			– Es muy útilizado en Android
			– Y es usado del lado del servidor o Server Side
			PHP
			– Lenguaje interpretado
			– Pensado para la Web
			Python
			– Diseñado para ser fácil de usar
			– Múltiples usos: Web, Server Side, Análisis de Datos, Machine Learning, etc
			Javascript
			– Lenguaje interpretado
			– Orientado a Objetos pero basado en prototipos
			– Pensado para la Web
			C#
			Ruby
			Kotlin
	-> 5. 
